#!/bin/bash

set -u

jobs=4

# Для сборки на ARM системах с ограниченным объемом памяти
mem_size=$(free -m | sed '2!d' | sed 's/  */ /g' | cut -d' ' -f2)
[ "$mem_size" -lt 2000 ] && jobs=3
echo "jobs: $jobs"

rebuild=
print_help=
build_mode=release
need_packages=

build_deb_package=

install_toxphone=
install_toxphoneconf=

remove_install_toxphone=
remove_install_toxphoneconf=

# Директория этого скрипта
script_dir=$(dirname $(readlink -f $0))
echo "script_dir: $script_dir"

# Определение параметров host-системы
if [ ! -e $script_dir/setup/os_detect ]; then
    echo "Error: os_detect script not found"
    exit 1
fi
. $script_dir/setup/os_detect


function display_help()
{
cat << EOF
Usage: ${0##*/}
  -h   display this help and exit
  -r   full rebuild of project
  -d   build in 'debug' mode
  -D   build deb package
  -i   install (toxphone and toxphone-config)
  -it  install deb package toxphone
  -ic  install deb package toxphone-config
  -R   remove installation (toxphone and toxphone-config) and exit
  -Rt  remove installation toxphone and exit
  -Rc  remove installation toxphone-config and exit
EOF
}

# Обработка позиционных параметров:
#    http://wiki.bash-hackers.org/scripting/posparams
while test -n ${1:-""}
do
    case "$1" in
        -h)
            print_help=yes
            shift
            ;;
        -r)
            rebuild=yes
            shift
            ;;
        -d)
            build_mode=debug
            shift
            ;;
        -D)
            build_deb_package=yes
            shift
            ;;
        -i)
            install_toxphone=yes
            install_toxphoneconf=yes
            shift
            ;;
        -it)
            install_toxphone=yes
            shift
            ;;
        -ic)
            install_toxphoneconf=yes
            shift
            ;;
        -R)
            remove_install_toxphone=yes
            remove_install_toxphoneconf=yes
            shift
            ;;
        -Rt)
            remove_install_toxphone=yes
            shift
            ;;
        -Rc)
            remove_install_toxphoneconf=yes
            shift
            ;;
        -*)
            echo "Error: Unknown option: $1" >&2
            exit 1
            ;;
        *)  # No more options
            #break
            echo "Error: Unknown option: $1" >&2
            exit 1
            ;;
    esac
done

if [ "$print_help" = "yes" ]; then
    display_help
    exit 0
fi

if [ "$remove_install_toxphone" = "yes" ]; then
    echo -e "\nRemove ToxPhone..."

    set +e
    res=$(dpkg -l | grep -P '^ii\s+toxphone ')
    set -e
    if [ -z "$res" ]; then
        echo "Nothing to remove, ToxPhone not installed"
    else
        sudo dpkg -r toxphone
        echo "ToxPhone was removed"
    fi
    [ "$remove_install_toxphoneconf" != "yes" ] && exit 0
fi

if [ "$remove_install_toxphoneconf" = "yes" ]; then
    echo -e "\nRemove ToxPhone config..."

    set +e
    res=$(dpkg -l | grep -P '^ii\s+toxphone-config ')
    set -e
    if [ -z "$res" ]; then
        echo "Nothing to remove, ToxPhone config not installed"
    else
        sudo dpkg -r toxphone-config
        echo "ToxPhone config was removed"
    fi
    exit 0
fi

function check_need_package()
{
    dpkg -s $1 &> /dev/null
    [ "$?" -ne 0 ] && need_packages="$need_packages $1"
}

need_packages=
check_need_package 'qt4-default'
check_need_package 'libopus-dev'
check_need_package 'libpulse-dev'
check_need_package 'libusb-dev'
check_need_package 'libconfig-dev'

if [ "$os_id" = "ubuntu" -a "$os_ver" = "16.04" ]; then
    check_need_package 'libvpx-dev'
    check_need_package 'hashdeep'
fi

if [ "$build_deb_package" = "yes" \
     -o "$install_toxphone" = "yes" \
     -o "$install_toxphoneconf" = "yes" ]
then
    # Required packages
    check_need_package 'fakeroot'
    check_need_package 'md5deep'
    check_need_package 'debconf'
    check_need_package 'debhelper'
    check_need_package 'lintian'
fi

if [ -n "$need_packages" ]; then
    echo "Error: Need to install packages:$need_packages"
    echo "    Use: sudo apt-get install $need_packages"
    exit 1
fi

if [ "$os_id" = "ubuntu" -a "$os_ver" = "16.04" ]; then
    if [ ! -L /usr/local/bin/md5deep ]; then
        sudo ln -sf /usr/bin/hashdeep /usr/local/bin/md5deep
    fi
fi

git_branch=$(git status -b -s | head -n1 | sed 's/\./ /' | cut -d' ' -f2)
build_subdir=${build_mode}-${git_branch}
build_dir=./build/$build_subdir

[ "$rebuild" = "yes"  ] && rm -rf ./build/$build_subdir

QBS=$(which qbs)

res=$($QBS config --list profiles.toxphone)
if [ -z "$res" ]; then
    echo "Error: Qbs profile toxthone not found"
    exit 1
fi

set -e
$QBS build \
    --file toxphone_project.qbs \
    --build-directory ./build \
    --command-echo-mode command-line \
    --jobs $jobs \
    --no-install \
    qbs.buildVariant:$build_mode \
    project.printPackegeBuildInfo:true \
    config:$build_subdir \
    profile:toxphone


if [ "$build_deb_package" != "yes" ]; then
    [ "$install_toxphone" != "yes" -a "$install_toxphoneconf" != "yes" ] && exit 0
fi

#
# Создание DEB пакета
#
package_vers=$(head -n1 VERSION)
echo "package_vers: $package_vers"

#package_date=$(date +%Y%m%d%H%M)
package_date=$(date +%Y%m%d)
echo "package_date: $package_date"

gitrev=$(git log -1 --pretty=%h)
echo "gitrev: $gitrev"

#
# Формирование deb-пакета для toxphone
#
if [ "$build_deb_package" = "yes" -o "$install_toxphone" = "yes" ]; then
    . $script_dir/setup/deb-toxphone
fi

#
# Формирование deb-пакета для toxphone-config
#
if [ "$build_deb_package" = "yes" -o "$install_toxphoneconf" = "yes" ]; then
    . $script_dir/setup/deb-toxphone-config
fi
